2016-01-29 15:33:32,793 - DEBUG - TianchengTest.py[192] - 测试开始时间: 2016-01-29 15:33:32
2016-01-29 15:33:32,796 - DEBUG - TianchengTest.py[29] - 运行模式：部分执行
2016-01-29 15:33:32,798 - DEBUG - TianchengTest.py[196] - 待执行用例: {'AFP': [1]}
2016-01-29 15:33:32,799 - DEBUG - TianchengTest.py[206] - sheetid_identity_card: {}
sheetid_UserMobile: {}
2016-01-29 15:33:32,805 - DEBUG - Mock_HttpServer.py[189] - [HttpServerThread] Http Server is Start Running 192.168.10.93:5556...
2016-01-29 15:33:33,822 - DEBUG - Mock_MQServer.py[100] - [MQServerThread] 消息订阅: ExchangeNamelist: ['QDP_REPS', 'QDP_YUANJIN', 'QDP_JUNXIN', 'QDP_BAIRONG', 'QDP_ZIMAXINYONG', 'QDP_YANGHANGZHENGXINQUERYSERVICE', 'QDP_PENGYUAN', 'QDP_LAOLAI_CHECK', 'QDP_ANRONG', 'QDP_QIANHAIZHENGXIN', 'QDP_TONGDUN']
2016-01-29 15:33:33,934 - DEBUG - Mock_MQServer.py[107] - [MQServerThread] MQ cusume is running....
2016-01-29 15:33:34,803 - DEBUG - TianchengTest.py[226] - Starting thread: TestRunThread
2016-01-29 15:33:34,811 - DEBUG - TianchengTest.py[160] - [TestRunThread] 开始执行用例: (AFP, 1)
---
2016-01-29 15:33:34,822 - DEBUG - Interface_DriverEngine.py[151] - [TestRunThread] 驱动执行:headers:{'TOKEN': 'abcdefghijk', 'APPID': '10'} ReqDate:{
    "FunctionCode": "100122",
    "CurrentTime": "20150723203212000000",
    "MsgBody": {
        "user_id": "abc123456",
        "ProjectId": "123",
        "identity_card": "003002196101160031",
        "idtype": "0",
        "name": "陈刚",
        "bank_cart": "12345",
        "reasonno": "04",
        "blackBox": "123",
        "ip": "192.168.1.122",
        "account_login": "test123",
        "mobile_phone": "18675559750",
        "loanType": "99",
        "currency": "23232",
        "loanMoney": 10000,
        "loanTimeLimit": 12,
        "applyDate": "2015-08-01",
        "assureType": "D",
        "creditAddress": "北京",
        "is_student": 1,
        "is_first_time": 0,
        "degree": "本科",
        "RELATION_VERIFICATION": [
            {
                "relation_name": "陈刚",
                "relation_phone": "18675559750"
            },
            {
                "relation_name": "",
                "relation_phone": ""
            }
        ]
    }
}
2016-01-29 15:33:34,849 - DEBUG - Interface_Driver.py[39] - [TestRunThread] params encode to utf-8
2016-01-29 15:33:34,881 - DEBUG - Interface_DriverEngine.py[154] - [TestRunThread] 执行结果:DriverResult:<Response [200]>
2016-01-29 15:33:34,907 - DEBUG - Mock_MQServer.py[58] - [MQServerThread] CallbackFunc from ExchangeName: QDP_REPS
2016-01-29 15:33:34,915 - DEBUG - Mock_MQServer.py[62] - [MQServerThread] 解包body结果: funcode: 201212
2016-01-29 15:33:34,920 - DEBUG - Mock_MQServer.py[65] - [MQServerThread] 解析body结果: response_topic: AFP_AFPFromQDP identity_card: 003002196101160031
2016-01-29 15:33:34,923 - ERROR - list index out of range
Traceback (most recent call last):
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\Mock_MQServer.py", line 32, in getMQMockDatai
    sheet, tid = self.ModMockO.getSheetId_from_identity_card(identity_card)
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\ModMock.py", line 89, in getSheetId_from_identity_card
    return sheetids[0]
IndexError: list index out of range
2016-01-29 15:33:34,928 - DEBUG - Mock_MQServer.py[69] - [MQServerThread] 获取响应数据: MQMockDatai: None
2016-01-29 15:33:35,809 - DEBUG - TianchengTest.py[233] - Starting thread: TestAssertThread
2016-01-29 15:33:35,821 - DEBUG - TianchengTest.py[239] - 等待子线程TestRunThread结束...
2016-01-29 15:33:35,822 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, u'45', 0, <Response [200]>)
2016-01-29 15:33:35,838 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 45.0}}
2016-01-29 15:33:35,846 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:33:35,851 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:33:35,882 - DEBUG - TianchengTest.py[241] - 子线程：TestRunThread结束
2016-01-29 15:33:35,884 - DEBUG - TianchengTest.py[243] - 等待子线程TestAssertThread结束...
2016-01-29 15:33:36,239 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:33:36,250 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:33:36,266 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:33:36,279 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456272717946850791984
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456272717946850791984'}
2016-01-29 15:33:36,285 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:33:36,289 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456272717946850791984',)
2016-01-29 15:33:41,918 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:33:41,943 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:33:41,944 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052821.945, 1454052821.945, <Response [200]>)
...
2016-01-29 15:33:46,950 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052821.945, 1454052821.945, <Response [200]>)
2016-01-29 15:33:46,976 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 39.97099995613098}}
2016-01-29 15:33:46,979 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:33:46,983 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:33:47,398 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:33:47,411 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:33:47,427 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:33:47,434 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456272717946850791984
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456272717946850791984'}
2016-01-29 15:33:47,437 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:33:47,443 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456272717946850791984',)
2016-01-29 15:33:47,453 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:33:47,456 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:33:47,457 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052827.457, 1454052827.457, <Response [200]>)
...
2016-01-29 15:33:52,464 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052827.457, 1454052827.457, <Response [200]>)
2016-01-29 15:33:52,496 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 34.931999921798706}}
2016-01-29 15:33:52,500 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:33:52,505 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:33:52,823 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:33:52,831 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:33:52,841 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:33:52,852 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456272717946850791984
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456272717946850791984'}
2016-01-29 15:33:52,858 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:33:52,864 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456272717946850791984',)
2016-01-29 15:33:52,874 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:33:52,877 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:33:52,878 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052832.878, 1454052832.878, <Response [200]>)
...
2016-01-29 15:33:57,884 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052832.878, 1454052832.878, <Response [200]>)
2016-01-29 15:34:32,815 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 0.0}}
2016-01-29 15:34:32,819 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:34:32,822 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:34:32,857 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:34:32,861 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:34:32,867 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:34:32,871 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456272717946850791984
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456272717946850791984'}
2016-01-29 15:34:32,877 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:34:32,881 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456272717946850791984',)
2016-01-29 15:34:32,891 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:34:32,894 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:34:32,895 - DEBUG - TianchengTest.py[127] - [TestAssertThread] 结果放入测试结果中: AFP 1 ('FAIL', u"u'usermodelhistory is NONE'")
...
2016-01-29 15:34:37,474 - DEBUG - Mock_MQServer.py[58] - [MQServerThread] CallbackFunc from ExchangeName: QDP_QIANHAIZHENGXIN
2016-01-29 15:34:37,483 - DEBUG - Mock_MQServer.py[62] - [MQServerThread] 解包body结果: funcode: 200300
2016-01-29 15:34:37,490 - DEBUG - Mock_MQServer.py[65] - [MQServerThread] 解析body结果: response_topic: AFP_AFPFromQDP identity_card: 003002196101160031
2016-01-29 15:34:37,490 - ERROR - list index out of range
Traceback (most recent call last):
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\Mock_MQServer.py", line 32, in getMQMockDatai
    sheet, tid = self.ModMockO.getSheetId_from_identity_card(identity_card)
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\ModMock.py", line 89, in getSheetId_from_identity_card
    return sheetids[0]
IndexError: list index out of range
2016-01-29 15:34:37,496 - DEBUG - Mock_MQServer.py[69] - [MQServerThread] 获取响应数据: MQMockDatai: None
2016-01-29 15:34:39,232 - DEBUG - Mock_MQServer.py[58] - [MQServerThread] CallbackFunc from ExchangeName: QDP_QIANHAIZHENGXIN
2016-01-29 15:34:39,234 - DEBUG - Mock_MQServer.py[62] - [MQServerThread] 解包body结果: funcode: 200300
2016-01-29 15:34:39,236 - DEBUG - Mock_MQServer.py[65] - [MQServerThread] 解析body结果: response_topic: AFP_AFPFromQDP identity_card: 003002196101160031
2016-01-29 15:34:39,237 - ERROR - list index out of range
Traceback (most recent call last):
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\Mock_MQServer.py", line 32, in getMQMockDatai
    sheet, tid = self.ModMockO.getSheetId_from_identity_card(identity_card)
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\ModMock.py", line 89, in getSheetId_from_identity_card
    return sheetids[0]
IndexError: list index out of range
2016-01-29 15:34:39,244 - DEBUG - Mock_MQServer.py[69] - [MQServerThread] 获取响应数据: MQMockDatai: None
2016-01-29 15:34:40,286 - DEBUG - Mock_MQServer.py[58] - [MQServerThread] CallbackFunc from ExchangeName: QDP_QIANHAIZHENGXIN
2016-01-29 15:34:40,293 - DEBUG - Mock_MQServer.py[62] - [MQServerThread] 解包body结果: funcode: 200300
2016-01-29 15:34:40,301 - DEBUG - Mock_MQServer.py[65] - [MQServerThread] 解析body结果: response_topic: AFP_AFPFromQDP identity_card: 003002196101160031
2016-01-29 15:34:40,302 - ERROR - list index out of range
Traceback (most recent call last):
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\Mock_MQServer.py", line 32, in getMQMockDatai
    sheet, tid = self.ModMockO.getSheetId_from_identity_card(identity_card)
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\ModMock.py", line 89, in getSheetId_from_identity_card
    return sheetids[0]
IndexError: list index out of range
2016-01-29 15:34:40,309 - DEBUG - Mock_MQServer.py[69] - [MQServerThread] 获取响应数据: MQMockDatai: None
2016-01-29 15:34:52,900 - DEBUG - TianchengTest.py[139] - [TestAssertThread] 从队列taskassert_queue中取任务超时
2016-01-29 15:34:52,901 - DEBUG - TianchengTest.py[245] - 子线程：TestAssertThread结束
2016-01-29 15:34:52,901 - DEBUG - TianchengTest.py[254] - 测试结束时间: 2016-01-29 15:34:52
2016-01-29 15:34:52,901 - DEBUG - TianchengTest.py[258] - testcase_result: {('AFP', 1): ('FAIL', u"u'usermodelhistory is NONE'")}
2016-01-29 15:34:52,904 - DEBUG - GenerateReport.py[125] - 生成测试结果报告: ./result/Test_Report_Filename20160129153452.html
