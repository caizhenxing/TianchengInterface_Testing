2016-01-29 18:47:04,473 - DEBUG - TianchengTest.py[192] - 测试开始时间: 2016-01-29 18:47:04
2016-01-29 18:47:04,476 - DEBUG - TianchengTest.py[29] - 运行模式：部分执行
2016-01-29 18:47:04,479 - DEBUG - TianchengTest.py[196] - 待执行用例: {'AFP': [1]}
2016-01-29 18:47:04,480 - DEBUG - TianchengTest.py[206] - sheetid_identity_card: {('AFP', 1): u'003002196101160031'}
sheetid_UserMobile: {}
2016-01-29 18:47:04,489 - DEBUG - Mock_HttpServer.py[189] - [HttpServerThread] Http Server is Start Running 192.168.10.93:5556...
2016-01-29 18:47:05,496 - DEBUG - Mock_MQServer.py[100] - [MQServerThread] 消息订阅: ExchangeNamelist: ['QDP_REPS', 'QDP_YUANJIN', 'QDP_JUNXIN', 'QDP_BAIRONG', 'QDP_ZIMAXINYONG', 'QDP_YANGHANGZHENGXINQUERYSERVICE', 'QDP_PENGYUAN', 'QDP_LAOLAI_CHECK', 'QDP_ANRONG', 'QDP_QIANHAIZHENGXIN', 'QDP_TONGDUN']
2016-01-29 18:47:05,602 - DEBUG - Mock_MQServer.py[107] - [MQServerThread] MQ cusume is running....
2016-01-29 18:47:06,486 - DEBUG - TianchengTest.py[226] - Starting thread: TestRunThread
2016-01-29 18:47:06,492 - DEBUG - TianchengTest.py[160] - [TestRunThread] 开始执行用例: (AFP, 1)
---
2016-01-29 18:47:06,506 - DEBUG - Interface_DriverEngine.py[142] - [TestRunThread] 驱动执行:TableData:[(u'userbasicinfo', [u'MobilePhone', u'userid', u'UserStatus', u'UserType', u'UserRealName', u'UserIDCard'], [18675559750L, u'absdfggery-ATa3b9e34f-c675-11e5-82e4-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031'])]
2016-01-29 18:47:06,512 - DEBUG - Interface_Driver.py[57] - [TestRunThread] connecting mysql db: ubas_data_20151127 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:06,526 - DEBUG - Interface_Driver.py[89] - [TestRunThread] 向表中插入数据: 参数:[(u'userbasicinfo', [u'MobilePhone', u'userid', u'UserStatus', u'UserType', u'UserRealName', u'UserIDCard'], [18675559750L, u'absdfggery-ATa3b9e34f-c675-11e5-82e4-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031'])]
2016-01-29 18:47:06,532 - DEBUG - Interface_Driver.py[106] - [TestRunThread] 执行插入SQL: query_str: INSERT INTO userbasicinfo(MobilePhone,userid,UserStatus,UserType,UserRealName,UserIDCard) VALUES(%s,%s,%s,%s,%s,%s)  query_value: (18675559750L, u'absdfggery-ATa3b9e34f-c675-11e5-82e4-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031')
2016-01-29 18:47:06,542 - DEBUG - Interface_DriverEngine.py[145] - [TestRunThread] 插数据结果:TableResult:True
2016-01-29 18:47:06,546 - DEBUG - Interface_DriverEngine.py[150] - [TestRunThread] 驱动执行:headers:{'TOKEN': 'abcdefghijk', 'APPID': '10'} ReqDate:{"FunctionCode": "100122", "MsgBody": {"idtype": "0", "account_login": "test123", "is_first_time": 0, "assureType": "D", "loanType": "99", "ip": "192.168.1.122", "RELATION_VERIFICATION": [{"relation_name": "陈刚", "relation_phone": "18675559750"}, {"relation_name": "", "relation_phone": ""}], "currency": "23232", "loanTimeLimit": 12, "user_id": "abc123456", "is_student": 1, "creditAddress": "北京", "bank_cart": "12345", "loanMoney": 10000, "mobile_phone": "18675559750", "degree": "本科", "ProjectId": "123", "reasonno": "04", "blackBox": "123", "name": "陈刚", "identity_card": "003002196101160031", "applyDate": "2015-08-01"}, "CurrentTime": "20150723203212000000"}
2016-01-29 18:47:06,561 - DEBUG - Interface_Driver.py[39] - [TestRunThread] params encode to utf-8
2016-01-29 18:47:06,578 - DEBUG - Interface_DriverEngine.py[153] - [TestRunThread] 执行结果:DriverResult:<Response [200]>
2016-01-29 18:47:06,584 - DEBUG - Interface_Driver.py[67] - [TestRunThread] closing mysql db connection
2016-01-29 18:47:06,595 - DEBUG - Mock_MQServer.py[58] - [MQServerThread] CallbackFunc from ExchangeName: QDP_REPS
2016-01-29 18:47:06,596 - DEBUG - Mock_MQServer.py[62] - [MQServerThread] 解包body结果: funcode: 201212
2016-01-29 18:47:06,601 - DEBUG - Mock_MQServer.py[65] - [MQServerThread] 解析body结果: response_topic: AFP_AFPFromQDP identity_card: 003002196101160031
2016-01-29 18:47:06,608 - DEBUG - Mock_MQServer.py[34] - [MQServerThread] sheet: AFP id: 1
2016-01-29 18:47:06,611 - DEBUG - Mock_MQServer.py[40] - [MQServerThread] MQMockDate: {u'laolai_crawler': [], u'bairong_credit': {}, u'tongdun_loan': {}, u'blacklist': [{u'crawldataupdatedate': u'20150827200322', u'totalborrowamount': u'', u'link_man_relation': u'', u'last_overdue_borrow_date': u'', u'sex': u'\u7537', u'overduepayout': u'30,480.00', u'reference_link': u'', u'company_phone': u'', u'company_name': u'', u'cumulateadvancement': u'0', u'overdueno': u'1', u'email': u'hzhuirong23@sina.com', u'refundmoney': u'', u'shouldpayments': u'', u'max_overduedays': u'76', u'link_man_mobile_no': u'', u'phone': u'', u'link_man_name': u'', u'updatedate': u'2015-08-27', u'lenders': u'', u'mobilephone': u'18675559750', u'birth_address': u'', u'name': u'\u9648\u521a', u'identity_card': u'003002196101160031', u'living_address': u'\u60e0\u5dde\u5e02\u4e0a\u6392\u9f99\u516b\u5564\u9152\u53825\u680b301', u'last_borrowtime': u'', u'company_address': u'', u'_id': {u'$oid': u'55dd907455c5496b54233eca'}, u'user': u''}], u'qianhai_credit': {}, u'qianhai_black_check': {}} 
2016-01-29 18:47:06,618 - DEBUG - Mock_MQServer.py[46] - [MQServerThread] DataKey: blacklist
2016-01-29 18:47:06,621 - DEBUG - Mock_MQServer.py[69] - [MQServerThread] 获取响应数据: MQMockDatai: [{"crawldataupdatedate": "20150827200322", "totalborrowamount": "", "link_man_relation": "", "last_overdue_borrow_date": "", "sex": "\u7537", "overduepayout": "30,480.00", "reference_link": "", "company_phone": "", "company_name": "", "cumulateadvancement": "0", "overdueno": "1", "email": "hzhuirong23@sina.com", "refundmoney": "", "shouldpayments": "", "max_overduedays": "76", "link_man_mobile_no": "", "phone": "", "link_man_name": "", "updatedate": "2015-08-27", "lenders": "", "mobilephone": "18675559750", "birth_address": "", "name": "\u9648\u521a", "identity_card": "003002196101160031", "living_address": "\u60e0\u5dde\u5e02\u4e0a\u6392\u9f99\u516b\u5564\u9152\u53825\u680b301", "last_borrowtime": "", "company_address": "", "_id": {"$oid": "55dd907455c5496b54233eca"}, "user": ""}]
2016-01-29 18:47:06,632 - DEBUG - Mock_MQServer.py[75] - [MQServerThread] 构造响应body完成!
2016-01-29 18:47:06,637 - DEBUG - Mock_MQServer.py[81] - [MQServerThread] 消息推送: [exchange]response_topic: AFP_AFPFromQDP

2016-01-29 18:47:07,490 - DEBUG - TianchengTest.py[233] - Starting thread: TestAssertThread
2016-01-29 18:47:07,500 - DEBUG - TianchengTest.py[239] - 等待子线程TestRunThread结束...
2016-01-29 18:47:07,502 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, u'45', 0, <Response [200]>)
2016-01-29 18:47:07,523 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 45.0}}
2016-01-29 18:47:07,529 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:07,535 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:07,549 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:07,553 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:07,562 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:07,576 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:07,582 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:07,585 - DEBUG - TianchengTest.py[241] - 子线程：TestRunThread结束
2016-01-29 18:47:07,591 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:07,592 - DEBUG - TianchengTest.py[243] - 等待子线程TestAssertThread结束...
2016-01-29 18:47:07,604 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:07,607 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:07,609 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064427.609, 1454064427.609, <Response [200]>)
...
2016-01-29 18:47:12,617 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064427.609, 1454064427.609, <Response [200]>)
2016-01-29 18:47:12,634 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 39.9779999256134}}
2016-01-29 18:47:12,653 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:12,660 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:12,674 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:12,680 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:12,687 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:12,694 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:12,700 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:12,707 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:12,720 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:12,723 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:12,726 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064432.726, 1454064432.726, <Response [200]>)
...
2016-01-29 18:47:17,734 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064432.726, 1454064432.726, <Response [200]>)
2016-01-29 18:47:17,750 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 34.956000089645386}}
2016-01-29 18:47:17,759 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:17,766 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:17,779 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:17,783 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:17,792 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:17,799 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:17,805 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:17,812 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:17,825 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:17,828 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:17,829 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064437.829, 1454064437.829, <Response [200]>)
...
2016-01-29 18:47:22,838 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064437.829, 1454064437.829, <Response [200]>)
2016-01-29 18:47:22,842 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 29.94600009918213}}
2016-01-29 18:47:22,845 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:22,851 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:22,861 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:22,865 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:22,867 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:22,868 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:22,869 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:22,871 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:22,878 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:22,880 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:22,881 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064442.88, 1454064442.88, <Response [200]>)
...
2016-01-29 18:47:27,881 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064442.88, 1454064442.88, <Response [200]>)
2016-01-29 18:47:27,881 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 24.944000244140625}}
2016-01-29 18:47:27,882 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:27,884 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:27,892 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:27,894 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:27,895 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:27,897 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:27,898 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:27,900 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:27,907 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:27,908 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:27,910 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064447.909, 1454064447.909, <Response [200]>)
...
2016-01-29 18:47:32,914 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064447.909, 1454064447.909, <Response [200]>)
2016-01-29 18:47:32,917 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 19.938000202178955}}
2016-01-29 18:47:32,921 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:32,927 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:32,937 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:32,940 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:32,941 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:32,943 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:32,944 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:32,946 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:32,953 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:32,954 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:32,957 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064452.956, 1454064452.956, <Response [200]>)
...
2016-01-29 18:47:37,959 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064452.956, 1454064452.956, <Response [200]>)
2016-01-29 18:47:37,963 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 14.933000326156616}}
2016-01-29 18:47:37,967 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:37,971 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:37,987 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:37,996 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:38,002 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:38,006 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:38,007 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:38,009 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:38,016 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:38,019 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:38,019 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064458.019, 1454064458.019, <Response [200]>)
...
2016-01-29 18:47:43,022 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064458.019, 1454064458.019, <Response [200]>)
2016-01-29 18:47:43,026 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 9.928000450134277}}
2016-01-29 18:47:43,030 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:43,036 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:43,051 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:43,059 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:43,063 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:43,069 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:43,073 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:43,076 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:43,085 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:43,086 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:43,086 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064463.087, 1454064463.087, <Response [200]>)
...
2016-01-29 18:47:48,092 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064463.087, 1454064463.087, <Response [200]>)
2016-01-29 18:47:48,095 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 4.922000408172607}}
2016-01-29 18:47:48,099 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:48,107 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:48,118 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:48,119 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:48,121 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:48,122 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:48,125 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:48,125 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:48,131 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:48,132 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:48,134 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454064468.134, 1454064468.134, <Response [200]>)
...
2016-01-29 18:47:53,134 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454064468.134, 1454064468.134, <Response [200]>)
2016-01-29 18:47:53,135 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 0.0}}
2016-01-29 18:47:53,137 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 18:47:53,138 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:53,144 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 18:47:53,147 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 18:47:53,148 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 18:47:53,150 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456388836775610681007
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456388836775610681007'}
2016-01-29 18:47:53,151 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 18:47:53,151 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456388836775610681007',)
2016-01-29 18:47:53,158 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 18:47:53,160 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 18:47:53,161 - DEBUG - TianchengTest.py[127] - [TestAssertThread] 结果放入测试结果中: AFP 1 ('FAIL', u"u'usermodelhistory is NONE'")
...
2016-01-29 18:48:13,163 - DEBUG - TianchengTest.py[139] - [TestAssertThread] 从队列taskassert_queue中取任务超时
2016-01-29 18:48:13,165 - DEBUG - TianchengTest.py[245] - 子线程：TestAssertThread结束
2016-01-29 18:48:13,168 - DEBUG - TianchengTest.py[254] - 测试结束时间: 2016-01-29 18:48:13
2016-01-29 18:48:13,171 - DEBUG - TianchengTest.py[258] - testcase_result: {('AFP', 1): ('FAIL', u"u'usermodelhistory is NONE'")}
2016-01-29 18:48:13,180 - DEBUG - GenerateReport.py[125] - 生成测试结果报告: ./result/Test_Report_Filename20160129184813.html
