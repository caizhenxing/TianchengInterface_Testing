2016-01-29 15:34:56,167 - DEBUG - TianchengTest.py[192] - 测试开始时间: 2016-01-29 15:34:56
2016-01-29 15:34:56,170 - DEBUG - TianchengTest.py[29] - 运行模式：部分执行
2016-01-29 15:34:56,171 - DEBUG - TianchengTest.py[196] - 待执行用例: {'AFP': [1]}
2016-01-29 15:34:56,174 - DEBUG - TianchengTest.py[206] - sheetid_identity_card: {}
sheetid_UserMobile: {}
2016-01-29 15:34:56,176 - DEBUG - TianchengTest.py[226] - Starting thread: TestRunThread
2016-01-29 15:34:56,177 - DEBUG - TianchengTest.py[160] - [TestRunThread] 开始执行用例: (AFP, 1)
---
2016-01-29 15:34:56,181 - DEBUG - Interface_DriverEngine.py[151] - [TestRunThread] 驱动执行:headers:{'TOKEN': 'abcdefghijk', 'APPID': '10'} ReqDate:{
    "FunctionCode": "100122",
    "CurrentTime": "20150723203212000000",
    "MsgBody": {
        "user_id": "abc123456",
        "ProjectId": "123",
        "identity_card": "003002196101160031",
        "idtype": "0",
        "name": "陈刚",
        "bank_cart": "12345",
        "reasonno": "04",
        "blackBox": "123",
        "ip": "192.168.1.122",
        "account_login": "test123",
        "mobile_phone": "18675559750",
        "loanType": "99",
        "currency": "23232",
        "loanMoney": 10000,
        "loanTimeLimit": 12,
        "applyDate": "2015-08-01",
        "assureType": "D",
        "creditAddress": "北京",
        "is_student": 1,
        "is_first_time": 0,
        "degree": "本科",
        "RELATION_VERIFICATION": [
            {
                "relation_name": "陈刚",
                "relation_phone": "18675559750"
            },
            {
                "relation_name": "",
                "relation_phone": ""
            }
        ]
    }
}
2016-01-29 15:34:56,201 - DEBUG - Interface_Driver.py[39] - [TestRunThread] params encode to utf-8
2016-01-29 15:34:56,220 - DEBUG - Interface_DriverEngine.py[154] - [TestRunThread] 执行结果:DriverResult:<Response [200]>
2016-01-29 15:34:57,177 - DEBUG - TianchengTest.py[233] - Starting thread: TestAssertThread
2016-01-29 15:34:57,180 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, u'45', 0, <Response [200]>)
2016-01-29 15:34:57,180 - DEBUG - TianchengTest.py[239] - 等待子线程TestRunThread结束...
2016-01-29 15:34:57,184 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 45.0}}
2016-01-29 15:34:57,188 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:34:57,193 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:34:57,207 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:34:57,211 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:34:57,217 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:34:57,232 - DEBUG - TianchengTest.py[241] - 子线程：TestRunThread结束
2016-01-29 15:34:57,233 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:34:57,233 - DEBUG - TianchengTest.py[243] - 等待子线程TestAssertThread结束...
2016-01-29 15:34:57,237 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:34:57,242 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:34:57,253 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:34:57,256 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:34:57,256 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052897.257, 1454052897.257, <Response [200]>)
...
2016-01-29 15:35:02,263 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052897.257, 1454052897.257, <Response [200]>)
2016-01-29 15:35:02,272 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 39.98699998855591}}
2016-01-29 15:35:02,280 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:02,290 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:02,311 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:02,315 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:02,319 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:02,325 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:02,332 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:02,335 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:02,346 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:02,349 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:02,351 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052902.351, 1454052902.351, <Response [200]>)
...
2016-01-29 15:35:07,358 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052902.351, 1454052902.351, <Response [200]>)
2016-01-29 15:35:07,368 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 34.97200012207031}}
2016-01-29 15:35:07,377 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:07,381 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:07,394 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:07,398 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:07,404 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:07,410 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:07,415 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:07,420 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:07,430 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:07,434 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:07,436 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052907.435, 1454052907.435, <Response [200]>)
...
2016-01-29 15:35:12,440 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052907.435, 1454052907.435, <Response [200]>)
2016-01-29 15:35:12,453 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 29.95800018310547}}
2016-01-29 15:35:12,463 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:12,476 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:12,486 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:12,490 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:12,496 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:12,502 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:12,506 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:12,512 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:12,523 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:12,526 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:12,528 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052912.527, 1454052912.527, <Response [200]>)
...
2016-01-29 15:35:17,533 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052912.527, 1454052912.527, <Response [200]>)
2016-01-29 15:35:17,545 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 24.943000078201294}}
2016-01-29 15:35:17,549 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:17,553 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:17,565 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:17,569 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:17,575 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:17,581 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:17,585 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:17,591 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:17,601 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:17,604 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:17,605 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052917.605, 1454052917.605, <Response [200]>)
...
2016-01-29 15:35:22,611 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052917.605, 1454052917.605, <Response [200]>)
2016-01-29 15:35:28,953 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 13.59500002861023}}
2016-01-29 15:35:28,957 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:28,960 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:28,974 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:28,980 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:28,986 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:28,992 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:28,996 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:29,002 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:29,013 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:29,016 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:29,017 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052929.017, 1454052929.017, <Response [200]>)
...
2016-01-29 15:35:34,023 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052929.017, 1454052929.017, <Response [200]>)
2016-01-29 15:35:34,026 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 8.588000059127808}}
2016-01-29 15:35:34,030 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:34,036 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:34,056 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:34,063 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:34,069 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:34,076 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:34,078 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:34,078 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:34,085 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:34,088 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:34,088 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052934.088, 1454052934.088, <Response [200]>)
...
2016-01-29 15:35:39,092 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052934.088, 1454052934.088, <Response [200]>)
2016-01-29 15:35:39,095 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 3.5830001831054688}}
2016-01-29 15:35:39,098 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:39,105 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:39,115 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:39,118 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:39,119 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:39,121 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:39,122 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:39,124 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:39,131 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:39,131 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:39,132 - DEBUG - TianchengTest.py[134] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454052939.132, 1454052939.132, <Response [200]>)
...
2016-01-29 15:35:44,134 - DEBUG - TianchengTest.py[85] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454052939.132, 1454052939.132, <Response [200]>)
2016-01-29 15:35:44,140 - DEBUG - TianchengTest.py[109] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 0.0}}
2016-01-29 15:35:44,142 - DEBUG - TianchengTest.py[117] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-29 15:35:44,148 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:44,157 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-29 15:35:44,161 - DEBUG - ModAFP.py[258] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-01-29 15:35:44,161 - DEBUG - ModAFP.py[290] - [TestAssertThread] 提取加密字段数据: HTTPEXP: None
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPResponse': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'HTTPResponse': {}, u'ResultJson': {}}
2016-01-29 15:35:44,163 - DEBUG - ModAFP.py[155] - [TestAssertThread] 检查响应: unique_id: abc123456273531488840822089
HTTPEXP: None
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456273531488840822089'}
2016-01-29 15:35:44,164 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-01-29 15:35:44,165 - DEBUG - ModAFP.py[179] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456273531488840822089',)
2016-01-29 15:35:44,171 - DEBUG - ModAFP.py[303] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-01-29 15:35:44,174 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-29 15:35:44,174 - DEBUG - TianchengTest.py[127] - [TestAssertThread] 结果放入测试结果中: AFP 1 ('FAIL', u"u'usermodelhistory is NONE'")
...
2016-01-29 15:36:04,178 - DEBUG - TianchengTest.py[139] - [TestAssertThread] 从队列taskassert_queue中取任务超时
2016-01-29 15:36:04,181 - DEBUG - TianchengTest.py[245] - 子线程：TestAssertThread结束
2016-01-29 15:36:04,184 - DEBUG - TianchengTest.py[254] - 测试结束时间: 2016-01-29 15:36:04
2016-01-29 15:36:04,187 - DEBUG - TianchengTest.py[258] - testcase_result: {('AFP', 1): ('FAIL', u"u'usermodelhistory is NONE'")}
2016-01-29 15:36:04,193 - DEBUG - GenerateReport.py[125] - 生成测试结果报告: ./result/Test_Report_Filename20160129153604.html
