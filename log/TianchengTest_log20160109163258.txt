2016-01-09 16:32:58,371 - DEBUG - TianchengTest.py[179] - 测试开始时间: 2016-01-09 16:32:58
2016-01-09 16:32:58,371 - DEBUG - TianchengTest.py[26] - 运行模式：部分执行
2016-01-09 16:32:58,372 - DEBUG - TianchengTest.py[183] - 待执行用例: {'AFP': [1]}
2016-01-09 16:32:58,372 - DEBUG - TianchengTest.py[186] - Starting thread: TestRunThread
2016-01-09 16:32:58,374 - DEBUG - TianchengTest.py[145] - [TestRunThread] 开始执行用例: (AFP, 1)
---
2016-01-09 16:32:58,375 - DEBUG - Interface_DriverEngine.py[174] - [TestRunThread] 驱动执行:headers:{'TOKEN': 'abcdefghijk', 'APPID': '10'} TestData:{"FunctionCode":"100122","CurrentTime":"20150723203212000000","MsgBody":{"user_id":"abc123456","ProjectId":"123","identity_card":"003001195901160031","idtype":"0","name":"陈刚","bank_cart":"12345","reasonno":"04","blackBox":"123","ip":"192.168.1.122","account_login":"test123","mobile_phone":"18675559750","loanType":"99","currency":"23232","loanMoney":10000,"loanTimeLimit":12,"applyDate":"2015-08-01","assureType":"D","creditAddress":"北京","is_student":1,"is_first_time":0,"degree":"本科","RELATION_VERIFICATION":[{"relation_name":"陈刚","relation_phone":"18675559750"},{"relation_name":"","relation_phone":""}]}}
2016-01-09 16:32:58,387 - DEBUG - Interface_DriverEngine.py[177] - [TestRunThread] 执行结果:DriverResult:<Response [200]>
2016-01-09 16:32:59,375 - DEBUG - TianchengTest.py[193] - Starting thread: TestAssertThread
2016-01-09 16:32:59,384 - DEBUG - TianchengTest.py[200] - 等待子线程TestRunThread结束...
2016-01-09 16:32:59,384 - DEBUG - TianchengTest.py[75] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, u'30', 0, <Response [200]>)
2016-01-09 16:32:59,391 - DEBUG - TianchengTest.py[99] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 30.0}}
2016-01-09 16:32:59,391 - DEBUG - TianchengTest.py[202] - 子线程：TestRunThread结束
2016-01-09 16:32:59,397 - DEBUG - TianchengTest.py[204] - 等待子线程TestAssertThread结束...
2016-01-09 16:32:59,397 - DEBUG - TianchengTest.py[107] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-01-09 16:32:59,401 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'BASE64_resultJson': {u'Status': u'0', u'model_Result': u'1'}, u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003001195901160031', u'AppID': u'abc123456', u'errorInfo': u'\u7528\u6237\u5e74\u9f84\u4e0d\u7b26\u5408\u8981\u6c42', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}}
2016-01-09 16:32:59,421 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-01-09 16:32:59,423 - DEBUG - ModAFP.py[243] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'BASE64_resultJson': {u'Status': u'0', u'model_Result': u'1'}, u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003001195901160031', u'AppID': u'abc123456', u'errorInfo': u'\u7528\u6237\u5e74\u9f84\u4e0d\u7b26\u5408\u8981\u6c42', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}}
2016-01-09 16:32:59,424 - DEBUG - ModAFP.py[275] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003001195901160031', u'AppID': u'abc123456', u'errorInfo': u'\u7528\u6237\u5e74\u9f84\u4e0d\u7b26\u5408\u8981\u6c42', u'realName': u'\u9648\u521a'}}
BASE64_ExpDict: {u'usermodelhistory': {u'resultJson': {u'Status': u'0', u'model_Result': u'1'}}}
2016-01-09 16:32:59,434 - DEBUG - ModAFP.py[140] - [TestAssertThread] 检查响应: unique_id: abc123456310230458800678141
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456310230458800678141'}
2016-01-09 16:32:59,434 - DEBUG - ModAFP.py[157] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003001195901160031', u'abc123456', u'\u7528\u6237\u5e74\u9f84\u4e0d\u7b26\u5408\u8981\u6c42', u'\u9648\u521a']
2016-01-09 16:32:59,436 - DEBUG - ModAFP.py[164] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456310230458800678141',)
2016-01-09 16:32:59,444 - DEBUG - ModAFP.py[172] - [TestAssertThread] 检查明文字段数据: result: (u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003001195901160031', u'abc123456', u'\u7528\u6237\u5e74\u9f84\u4e0d\u7b26\u5408\u8981\u6c42', u'\u9648\u521a')
expvalues: (u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003001195901160031', u'abc123456', u'\u7528\u6237\u5e74\u9f84\u4e0d\u7b26\u5408\u8981\u6c42', u'\u9648\u521a')
2016-01-09 16:32:59,444 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 0  expvalue: 0
2016-01-09 16:32:59,446 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 额度资格  expvalue: 额度资格
2016-01-09 16:32:59,447 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 18675559750  expvalue: 18675559750
2016-01-09 16:32:59,447 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 3  expvalue: 3
2016-01-09 16:32:59,448 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 1  expvalue: 1
2016-01-09 16:32:59,450 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 003001195901160031  expvalue: 003001195901160031
2016-01-09 16:32:59,450 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: abc123456  expvalue: abc123456
2016-01-09 16:32:59,451 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 用户年龄不符合要求  expvalue: 用户年龄不符合要求
2016-01-09 16:32:59,453 - DEBUG - ModAFP.py[190] - [TestAssertThread] 检查明文字段数据: iresult: 陈刚  expvalue: 陈刚
2016-01-09 16:32:59,453 - DEBUG - ModAFP.py[201] - [TestAssertThread] 检查BASE64加密字段数据: 用例中读取的fields: [u'resultJson']
values: [{u'Status': u'0', u'model_Result': u'1'}]
2016-01-09 16:32:59,454 - DEBUG - ModAFP.py[208] - [TestAssertThread] 执行SQL查询: query_str: SELECT resultJson FROM usermodelhistory WHERE uid = %s (u'abc123456310230458800678141',)
2016-01-09 16:32:59,456 - ERROR - (1054, "Unknown column 'uid' in 'where clause'")
Traceback (most recent call last):
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\ModAFP.py", line 284, in AFPAssert
    self.checkBASE64_ExpDict(BASE64_ExpDict, unique_id)
  File "D:\AutoTest\Code\TianchengInterface_Testing\src\ModAFP.py", line 209, in checkBASE64_ExpDict
    self.curMy.execute(query_str, query_where)
  File "C:\Python27\lib\site-packages\MySQLdb\cursors.py", line 205, in execute
    self.errorhandler(self, exc, value)
  File "C:\Python27\lib\site-packages\MySQLdb\connections.py", line 36, in defaulterrorhandler
    raise errorclass, errorvalue
OperationalError: (1054, "Unknown column 'uid' in 'where clause'")
2016-01-09 16:32:59,457 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-01-09 16:32:59,457 - DEBUG - TianchengTest.py[113] - [TestAssertThread] 结果放入测试结果中: AFP 1 ('ERROR', u'(1054, "Unknown column \'uid\' in \'where clause\'")')
...
2016-01-09 16:33:14,460 - DEBUG - TianchengTest.py[124] - [TestAssertThread] 从队列taskassert_queue中取任务超时
2016-01-09 16:33:14,463 - DEBUG - TianchengTest.py[206] - 子线程：TestAssertThread结束
2016-01-09 16:33:14,464 - DEBUG - TianchengTest.py[214] - 测试结束时间: 2016-01-09 16:33:14
2016-01-09 16:33:14,467 - DEBUG - TianchengTest.py[217] - testcase_result: {('AFP', 1): ('ERROR', u'(1054, "Unknown column \'uid\' in \'where clause\'")')}
2016-01-09 16:33:14,471 - DEBUG - GenerateReport.py[126] - 生成测试结果报告: .\result\Test_Report_Filename20160109163314.html
