2016-02-02 16:42:34,089 - DEBUG - TianchengTest.py[187] - 测试开始时间: 2016-02-02 16:42:34
2016-02-02 16:42:34,092 - DEBUG - TianchengTest.py[26] - 运行模式：部分执行
2016-02-02 16:42:34,095 - DEBUG - TianchengTest.py[191] - 待执行用例: {'AFP': [1]}
2016-02-02 16:42:34,098 - DEBUG - TianchengTest.py[194] - Starting thread: TestRunThread
2016-02-02 16:42:34,101 - DEBUG - TianchengTest.py[157] - [TestRunThread] 开始执行用例: (AFP, 1)
---
2016-02-02 16:42:34,105 - DEBUG - Interface_DriverEngine.py[142] - [TestRunThread] 驱动执行:TableData:[(u'userbasicinfo', [u'MobilePhone', u'userid', u'UserStatus', u'UserType', u'UserRealName', u'UserIDCard'], [18675559750L, u'absdfggery-ATe77b9780-c988-11e5-9f66-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031'])]
2016-02-02 16:42:34,111 - DEBUG - Interface_Driver.py[57] - [TestRunThread] connecting mysql db: ubas_data_20151127 192.168.18.85:3306 write/tc12345
2016-02-02 16:42:34,127 - DEBUG - Interface_Driver.py[89] - [TestRunThread] 向表中插入数据: 参数:[(u'userbasicinfo', [u'MobilePhone', u'userid', u'UserStatus', u'UserType', u'UserRealName', u'UserIDCard'], [18675559750L, u'absdfggery-ATe77b9780-c988-11e5-9f66-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031'])]
2016-02-02 16:42:34,132 - DEBUG - Interface_Driver.py[106] - [TestRunThread] 执行插入SQL: query_str: INSERT INTO userbasicinfo(MobilePhone,userid,UserStatus,UserType,UserRealName,UserIDCard) VALUES(%s,%s,%s,%s,%s,%s)  query_value: (18675559750L, u'absdfggery-ATe77b9780-c988-11e5-9f66-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031')
2016-02-02 16:42:34,141 - DEBUG - Interface_DriverEngine.py[145] - [TestRunThread] 插数据结果:TableResult:True
2016-02-02 16:42:34,145 - DEBUG - Interface_DriverEngine.py[150] - [TestRunThread] 驱动执行:headers:{'TOKEN': 'abcdefghijk', 'APPID': '10'} ReqDate:{"FunctionCode": "100122", "MsgBody": {"idtype": "0", "account_login": "test123", "is_first_time": 0, "assureType": "D", "loanType": "99", "ip": "192.168.1.122", "RELATION_VERIFICATION": [{"relation_name": "陈刚", "relation_phone": "18675559750"}, {"relation_name": "", "relation_phone": ""}], "currency": "23232", "loanTimeLimit": 12, "user_id": "abc123456", "is_student": 1, "creditAddress": "北京", "bank_cart": "12345", "loanMoney": 10000, "mobile_phone": "18675559750", "degree": "本科", "ProjectId": "123", "reasonno": "04", "blackBox": "123", "name": "陈刚", "identity_card": "003002196101160031", "applyDate": "2015-08-01"}, "CurrentTime": "20150723203212000000"}
2016-02-02 16:42:34,160 - DEBUG - Interface_Driver.py[39] - [TestRunThread] params encode to utf-8
2016-02-02 16:42:34,177 - DEBUG - Interface_DriverEngine.py[153] - [TestRunThread] 执行结果:DriverResult:<Response [200]>
2016-02-02 16:42:34,181 - DEBUG - Interface_Driver.py[67] - [TestRunThread] closing mysql db connection
2016-02-02 16:42:35,099 - DEBUG - TianchengTest.py[201] - Starting thread: TestAssertThread
2016-02-02 16:42:35,102 - DEBUG - TianchengTest.py[207] - 等待子线程TestRunThread结束...
2016-02-02 16:42:35,102 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, u'45', 0, <Response [200]>)
2016-02-02 16:42:35,109 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 45.0}}
2016-02-02 16:42:35,115 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:42:35,121 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:35,135 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:42:35,141 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:35,148 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:42:35,170 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:42:35,177 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:42:35,186 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:42:35,187 - DEBUG - TianchengTest.py[209] - 子线程：TestRunThread结束
2016-02-02 16:42:35,194 - DEBUG - TianchengTest.py[211] - 等待子线程TestAssertThread结束...
2016-02-02 16:42:35,198 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:42:35,203 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:42:35,207 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402555.206, 1454402555.206, <Response [200]>)
...
2016-02-02 16:42:40,217 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402555.206, 1454402555.206, <Response [200]>)
2016-02-02 16:42:40,220 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 39.98699998855591}}
2016-02-02 16:42:40,224 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:42:40,230 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:40,336 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:42:40,345 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:40,351 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:42:40,357 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:42:40,365 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:42:40,371 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:42:40,381 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:42:40,381 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:42:40,382 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402560.383, 1454402560.383, <Response [200]>)
...
2016-02-02 16:42:45,387 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402560.383, 1454402560.383, <Response [200]>)
2016-02-02 16:42:45,391 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 34.98099994659424}}
2016-02-02 16:42:45,394 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:42:45,401 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:45,415 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:42:45,418 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:45,421 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:42:45,423 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:42:45,424 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:42:45,424 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:42:45,431 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:42:45,434 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:42:45,434 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402565.434, 1454402565.434, <Response [200]>)
...
2016-02-02 16:42:50,437 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402565.434, 1454402565.434, <Response [200]>)
2016-02-02 16:42:50,441 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 29.9760000705719}}
2016-02-02 16:42:50,444 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:42:50,450 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:50,463 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:42:50,466 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:50,467 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:42:50,469 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:42:50,470 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:42:50,471 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:42:50,479 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:42:50,480 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:42:50,480 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402570.48, 1454402570.48, <Response [200]>)
...
2016-02-02 16:42:55,483 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402570.48, 1454402570.48, <Response [200]>)
2016-02-02 16:42:55,486 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 24.97100019454956}}
2016-02-02 16:42:55,493 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:42:55,497 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:55,513 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:42:55,519 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:42:55,525 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:42:55,526 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:42:55,529 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:42:55,529 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:42:55,538 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:42:55,539 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:42:55,539 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402575.54, 1454402575.54, <Response [200]>)
...
2016-02-02 16:43:00,542 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402575.54, 1454402575.54, <Response [200]>)
2016-02-02 16:43:00,546 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 19.967000246047974}}
2016-02-02 16:43:00,551 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:43:00,555 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:00,568 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:43:00,571 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:00,572 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:43:00,572 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:43:00,573 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:43:00,575 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:43:00,582 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:43:00,585 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:43:00,585 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402580.586, 1454402580.586, <Response [200]>)
...
2016-02-02 16:43:05,591 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402580.586, 1454402580.586, <Response [200]>)
2016-02-02 16:43:05,595 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 14.961000204086304}}
2016-02-02 16:43:05,598 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:43:05,602 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:05,624 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:43:05,627 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:05,628 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:43:05,628 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:43:05,630 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:43:05,631 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:43:05,637 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:43:05,638 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:43:05,640 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402585.639, 1454402585.639, <Response [200]>)
...
2016-02-02 16:43:10,641 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402585.639, 1454402585.639, <Response [200]>)
2016-02-02 16:43:10,647 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 9.957000255584717}}
2016-02-02 16:43:10,650 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:43:10,654 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:10,667 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:43:10,674 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:10,677 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:43:10,677 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:43:10,678 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:43:10,680 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:43:10,687 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:43:10,688 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:43:10,688 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402590.689, 1454402590.689, <Response [200]>)
...
2016-02-02 16:43:15,691 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402590.689, 1454402590.689, <Response [200]>)
2016-02-02 16:43:15,697 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 4.953000068664551}}
2016-02-02 16:43:15,700 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:43:15,706 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:15,720 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:43:15,723 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:15,724 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:43:15,726 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:43:15,726 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:43:15,727 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:43:15,734 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:43:15,736 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:43:15,736 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402595.737, 1454402595.737, <Response [200]>)
...
2016-02-02 16:43:20,739 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402595.737, 1454402595.737, <Response [200]>)
2016-02-02 16:43:20,740 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 0.0}}
2016-02-02 16:43:20,740 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:43:20,742 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:20,766 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:43:20,773 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:43:20,779 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:43:20,783 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456314161610460564511
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456314161610460564511'}
2016-02-02 16:43:20,786 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:43:20,789 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456314161610460564511',)
2016-02-02 16:43:20,796 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:43:20,796 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:43:20,798 - DEBUG - TianchengTest.py[124] - [TestAssertThread] 结果放入测试结果中: AFP 1 ('FAIL', u"u'usermodelhistory is NONE'")
...
2016-02-02 16:43:40,801 - DEBUG - TianchengTest.py[136] - [TestAssertThread] 从队列taskassert_queue中取任务超时
2016-02-02 16:43:40,805 - DEBUG - TianchengTest.py[213] - 子线程：TestAssertThread结束
2016-02-02 16:43:40,808 - DEBUG - TianchengTest.py[222] - 测试结束时间: 2016-02-02 16:43:40
2016-02-02 16:43:40,811 - DEBUG - TianchengTest.py[226] - testcase_result: {('AFP', 1): ('FAIL', u"u'usermodelhistory is NONE'")}
2016-02-02 16:43:40,816 - DEBUG - GenerateReport.py[125] - 生成测试结果报告: ./result/Test_Report_Filename20160202164340.html
