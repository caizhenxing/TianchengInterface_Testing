2016-02-02 16:46:19,839 - DEBUG - TianchengTest.py[187] - 测试开始时间: 2016-02-02 16:46:19
2016-02-02 16:46:19,842 - DEBUG - TianchengTest.py[26] - 运行模式：部分执行
2016-02-02 16:46:19,845 - DEBUG - TianchengTest.py[191] - 待执行用例: {'AFP': [1]}
2016-02-02 16:46:19,846 - DEBUG - TianchengTest.py[194] - Starting thread: TestRunThread
2016-02-02 16:46:19,849 - DEBUG - TianchengTest.py[157] - [TestRunThread] 开始执行用例: (AFP, 1)
---
2016-02-02 16:46:19,855 - DEBUG - Interface_DriverEngine.py[142] - [TestRunThread] 驱动执行:TableData:[(u'userbasicinfo', [u'MobilePhone', u'userid', u'UserStatus', u'UserType', u'UserRealName', u'UserIDCard'], [18675559750L, u'absdfggery-AT6e0a27cf-c989-11e5-b23d-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031'])]
2016-02-02 16:46:19,861 - DEBUG - Interface_Driver.py[57] - [TestRunThread] connecting mysql db: ubas_data_20151127 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:19,934 - DEBUG - Interface_Driver.py[89] - [TestRunThread] 向表中插入数据: 参数:[(u'userbasicinfo', [u'MobilePhone', u'userid', u'UserStatus', u'UserType', u'UserRealName', u'UserIDCard'], [18675559750L, u'absdfggery-AT6e0a27cf-c989-11e5-b23d-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031'])]
2016-02-02 16:46:19,948 - DEBUG - Interface_Driver.py[106] - [TestRunThread] 执行插入SQL: query_str: INSERT INTO userbasicinfo(MobilePhone,userid,UserStatus,UserType,UserRealName,UserIDCard) VALUES(%s,%s,%s,%s,%s,%s)  query_value: (18675559750L, u'absdfggery-AT6e0a27cf-c989-11e5-b23d-64006a053be1', 0, u'1', u'\u9648\u521a', u'003002196101160031')
2016-02-02 16:46:19,959 - DEBUG - Interface_DriverEngine.py[145] - [TestRunThread] 插数据结果:TableResult:True
2016-02-02 16:46:19,963 - DEBUG - Interface_DriverEngine.py[150] - [TestRunThread] 驱动执行:headers:{'TOKEN': 'abcdefghijk', 'APPID': '10'} ReqDate:{"FunctionCode": "100122", "MsgBody": {"idtype": "0", "account_login": "test123", "is_first_time": 0, "assureType": "D", "loanType": "99", "ip": "192.168.1.122", "RELATION_VERIFICATION": [{"relation_name": "陈刚", "relation_phone": "18675559750"}, {"relation_name": "", "relation_phone": ""}], "currency": "23232", "loanTimeLimit": 12, "user_id": "abc123456", "is_student": 1, "creditAddress": "北京", "bank_cart": "12345", "loanMoney": 10000, "mobile_phone": "18675559750", "degree": "本科", "ProjectId": "123", "reasonno": "04", "blackBox": "123", "name": "陈刚", "identity_card": "003002196101160031", "applyDate": "2015-08-01"}, "CurrentTime": "20150723203212000000"}
2016-02-02 16:46:19,976 - DEBUG - Interface_Driver.py[39] - [TestRunThread] params encode to utf-8
2016-02-02 16:46:19,994 - DEBUG - Interface_DriverEngine.py[153] - [TestRunThread] 执行结果:DriverResult:<Response [200]>
2016-02-02 16:46:20,000 - DEBUG - Interface_Driver.py[67] - [TestRunThread] closing mysql db connection
2016-02-02 16:46:20,849 - DEBUG - TianchengTest.py[201] - Starting thread: TestAssertThread
2016-02-02 16:46:20,861 - DEBUG - TianchengTest.py[207] - 等待子线程TestRunThread结束...
2016-02-02 16:46:20,862 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, u'45', 0, <Response [200]>)
2016-02-02 16:46:20,878 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 45.0}}
2016-02-02 16:46:20,884 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:20,890 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:20,905 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:20,910 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:20,918 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:20,938 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:20,947 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:20,957 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:20,971 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:20,976 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:20,982 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402780.981, 1454402780.981, <Response [200]>)
...
2016-02-02 16:46:21,000 - DEBUG - TianchengTest.py[209] - 子线程：TestRunThread结束
2016-02-02 16:46:21,003 - DEBUG - TianchengTest.py[211] - 等待子线程TestAssertThread结束...
2016-02-02 16:46:25,987 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402780.981, 1454402780.981, <Response [200]>)
2016-02-02 16:46:25,993 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 39.98799991607666}}
2016-02-02 16:46:25,997 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:26,003 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:26,017 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:26,023 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:26,029 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:26,039 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:26,046 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:26,053 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:26,065 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:26,069 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:26,072 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402786.071, 1454402786.071, <Response [200]>)
...
2016-02-02 16:46:31,079 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402786.071, 1454402786.071, <Response [200]>)
2016-02-02 16:46:31,095 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 34.96600008010864}}
2016-02-02 16:46:31,108 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:31,114 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:31,128 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:31,132 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:31,141 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:31,151 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:31,157 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:31,165 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:31,177 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:31,180 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:31,183 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402791.183, 1454402791.183, <Response [200]>)
...
2016-02-02 16:46:36,190 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402791.183, 1454402791.183, <Response [200]>)
2016-02-02 16:46:36,207 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 29.944000244140625}}
2016-02-02 16:46:36,213 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:36,217 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:36,233 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:36,236 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:36,244 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:36,255 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:36,260 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:36,267 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:36,279 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:36,283 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:36,286 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402796.285, 1454402796.285, <Response [200]>)
...
2016-02-02 16:46:41,292 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402796.285, 1454402796.285, <Response [200]>)
2016-02-02 16:46:41,309 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 24.922000408172607}}
2016-02-02 16:46:41,326 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:41,338 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:41,361 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:41,365 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:41,374 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:41,382 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:41,390 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:41,398 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:41,408 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:41,413 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:41,414 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402801.414, 1454402801.414, <Response [200]>)
...
2016-02-02 16:46:46,421 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402801.414, 1454402801.414, <Response [200]>)
2016-02-02 16:46:46,437 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 19.902000427246094}}
2016-02-02 16:46:46,454 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:46,467 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:46,483 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:46,489 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:46,496 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:46,506 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:46,513 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:46,519 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:46,532 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:46,536 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:46,539 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402806.538, 1454402806.538, <Response [200]>)
...
2016-02-02 16:46:51,546 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402806.538, 1454402806.538, <Response [200]>)
2016-02-02 16:46:51,563 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 14.879000425338745}}
2016-02-02 16:46:51,571 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:51,575 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:51,589 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:51,595 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:51,601 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:51,611 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:51,617 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:51,625 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:51,637 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:51,640 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:51,642 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402811.642, 1454402811.642, <Response [200]>)
...
2016-02-02 16:46:56,648 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402811.642, 1454402811.642, <Response [200]>)
2016-02-02 16:46:56,665 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 9.8580002784729}}
2016-02-02 16:46:56,670 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:46:56,676 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:56,700 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:46:56,706 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:46:56,713 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:46:56,723 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:46:56,730 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:46:56,737 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:46:56,750 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:46:56,755 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:46:56,756 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402816.756, 1454402816.756, <Response [200]>)
...
2016-02-02 16:47:01,763 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402816.756, 1454402816.756, <Response [200]>)
2016-02-02 16:47:01,780 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 4.836000204086304}}
2016-02-02 16:47:01,796 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:47:01,802 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:47:01,818 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:47:01,822 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:47:01,831 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:47:01,841 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:47:01,846 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:47:01,855 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:47:01,867 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:47:01,871 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:47:01,874 - DEBUG - TianchengTest.py[131] - [TestAssertThread] 放回队列继续处理: ('AFP', 1, 1454402821.873, 1454402821.873, <Response [200]>)
...
2016-02-02 16:47:06,881 - DEBUG - TianchengTest.py[82] - [TestAssertThread] 从队列taskassert_queue中取出一条任务: ('AFP', 1, 1454402821.873, 1454402821.873, <Response [200]>)
2016-02-02 16:47:06,898 - DEBUG - TianchengTest.py[106] - [TestAssertThread] 状态处理后timestate: {('AFP', 1): {'timeoutdelay': 0.0, 'timeouttask': 0.0}}
2016-02-02 16:47:06,915 - DEBUG - TianchengTest.py[114] - [TestAssertThread] 调用断言模块进行处理: AFP 1 <Response [200]>
2016-02-02 16:47:06,928 - DEBUG - Interface_AssertEngine.py[96] - [TestAssertThread] 驱动断言:response:<Response [200]> ExpectationDict:{u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:47:06,944 - DEBUG - Interface_Assert.py[41] - [TestAssertThread] init connecting mysql db: fraudcheck_77testteam 192.168.18.85:3306 write/tc12345
2016-02-02 16:47:06,948 - DEBUG - ModAFP.py[255] - [TestAssertThread] 提取加密字段和响应数据from: ExpectationDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'HTTPEXP': {u'Status': u'0', u'Messge': u'success'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
2016-02-02 16:47:06,957 - DEBUG - ModAFP.py[287] - [TestAssertThread] 提取加密字段数据: HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
ExpDict: {u'usermodelhistory': {u'status': u'0', u'modelName': u'\u989d\u5ea6\u8d44\u683c', u'mobilePhone': u'18675559750', u'modelType': 3, u'modelResult': u'1', u'identityCard': u'003002196101160031', u'AppID': u'abc123456', u'errorInfo': u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'realName': u'\u9648\u521a'}, u'ResultJson': {u'Status': u'0', u'model_Result': u'1'}}
BASE64_ExpDict: {u'usermodelhistory': {}, u'ResultJson': {}}
2016-02-02 16:47:06,967 - DEBUG - ModAFP.py[152] - [TestAssertThread] 检查响应: unique_id: abc123456316419813470540404
HTTPEXP: {u'Status': u'0', u'Messge': u'success'}
responseContentDict: {u'Status': u'0', u'Messge': u'success', u'unique': u'abc123456316419813470540404'}
2016-02-02 16:47:06,974 - DEBUG - ModAFP.py[169] - [TestAssertThread] 检查明文字段数据: 用例中读取的fields: [u'status', u'modelName', u'mobilePhone', u'modelType', u'modelResult', u'identityCard', u'AppID', u'errorInfo', u'realName']
values: [u'0', u'\u989d\u5ea6\u8d44\u683c', u'18675559750', 3, u'1', u'003002196101160031', u'abc123456', u'\u81ea\u6709\u9ed1\u540d\u5355\u547d\u4e2d', u'\u9648\u521a']
2016-02-02 16:47:06,982 - DEBUG - ModAFP.py[176] - [TestAssertThread] 执行SQL查询: query_str: SELECT status, modelName, mobilePhone, modelType, modelResult, identityCard, AppID, errorInfo, realName FROM usermodelhistory WHERE UniqueID = %s (u'abc123456316419813470540404',)
2016-02-02 16:47:06,993 - DEBUG - ModAFP.py[300] - [TestAssertThread] TableNoneError: TableName: u'usermodelhistory is NONE'
2016-02-02 16:47:06,996 - DEBUG - Interface_Assert.py[55] - [TestAssertThread] Release  public resources
2016-02-02 16:47:07,000 - DEBUG - TianchengTest.py[124] - [TestAssertThread] 结果放入测试结果中: AFP 1 ('FAIL', u"u'usermodelhistory is NONE'")
...
2016-02-02 16:47:27,006 - DEBUG - TianchengTest.py[136] - [TestAssertThread] 从队列taskassert_queue中取任务超时
2016-02-02 16:47:27,019 - DEBUG - TianchengTest.py[213] - 子线程：TestAssertThread结束
2016-02-02 16:47:27,026 - DEBUG - TianchengTest.py[222] - 测试结束时间: 2016-02-02 16:47:27
2016-02-02 16:47:27,029 - DEBUG - TianchengTest.py[226] - testcase_result: {('AFP', 1): ('FAIL', u"u'usermodelhistory is NONE'")}
2016-02-02 16:47:27,033 - DEBUG - GenerateReport.py[125] - 生成测试结果报告: ./result/Test_Report_Filename20160202164727.html
